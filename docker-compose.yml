# Docker Compose file for setting up a PostgreSQL database for a hockey application
services:
#   web:
#     build: 
#       context: ..
#       dockerfile: docker/Dockerfile
#     volumes:
#       - ..:/app
#     ports:
#       - "8000:8000"
#     environment:
#       - DATABASE_URL=postgres://user:password@db:5432/mydatabase
#     depends_on:
#       - db
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=hockey-images
    depends_on:
      - db
      - minio
    networks:
      - backend

  db:
    image: postgres:latest
    restart: always
    container_name: hockey_db
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - hockey_data:/var/lib/postgresql/data
      - ./src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"

# Add MinIO service
  minio:
    image: minio/minio:latest
    container_name: hockey_minio
    restart: always
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - backend
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

volumes:
  hockey_data:
    name: hockey_data
  minio_data:
    name: minio_data

networks:
  backend:
    name: hockey_backend